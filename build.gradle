buildscript {
    repositories {
        jcenter()
        maven { url "http://oss.jfrog.org/artifactory/repo" }
    }
    dependencies {
        classpath "io.ratpack:ratpack-gradle:1.4.4"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
        classpath 'com.moowork.gradle:gradle-node-plugin:0.9'
    }
}

apply plugin: "io.ratpack.ratpack-groovy"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "idea"
apply plugin: 'groovy'
apply plugin: 'codenarc'
apply plugin: "com.moowork.node"

repositories {
    jcenter()
    maven { url "http://oss.jfrog.org/artifactory/repo" }
}

codenarcMain {
    configFile = rootProject.file("gradle/codenarc/rulesets.groovy")
}
codenarcTest {
    configFile = rootProject.file("gradle/codenarc/rulesets.groovy")
}
dependencies {
    // Default SLF4J binding.  Note that this is a blocking implementation.
    // See here for a non blocking appender http://logging.apache.org/log4j/2.x/manual/async.html
    runtime 'org.slf4j:slf4j-simple:1.7.21'

    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'

    compile ratpack.dependency('handlebars')

    // https://mvnrepository.com/artifact/com.google.inject/guice
    compile group: 'com.google.inject', name: 'guice', version: '3.0'

    compile 'org.liquibase:liquibase-core:3.4.2'
    compile 'org.postgresql:postgresql:9.4.1208'
    testCompile ratpack.dependency('test')
    compile ratpack.dependency("remote")
    testCompile ratpack.dependency("remote-test")
    compile ratpack.dependency("hikari")

    compile ratpack.dependency('session')
    compile ratpack.dependency('pac4j')
    compile "org.pac4j:pac4j-http:1.8.6"
    compile "org.pac4j:pac4j-oauth:1.8.6"

    // Dependencies for mock object types and mock concrete types in spock.
    testCompile 'cglib:cglib:2.2.2'
    testCompile 'org.objenesis:objenesis:2.1'


    compile ratpack.dependency("guice"), {
        force = true
    }

}

idea {
    project {
        wildcards.add "ratpack.groovy"
        wildcards.add "GebConfig.groovy"
    }
}

// NPM / NODE SETUP

node {
    version = '4.4.5'
    npmVersion = '2.15.5'
    download = true
}

task npmCacheConfig(type: NpmTask) {
    description = "Configure the NPM cache"
    def npmCacheDir = "${gradle.getGradleUserHomeDir()}/caches/npm"
    outputs.files file(npmCacheDir)
    args = ['config', 'set', 'cache', npmCacheDir]
}

task npmPackages(type: NpmTask, dependsOn: npmCacheConfig) {
    description = "Install Node.js packages"
    args = ['install']
    inputs.files file('package.json')
    outputs.files file('node_modules')
}

task bowerInstall(type: NodeTask) {
    script = file('node_modules/.bin/bower')
    args = ["--config.storage.cache=${gradle.getGradleUserHomeDir()}}/caches/bower/cache",
            "--config.storage.packages=${gradle.getGradleUserHomeDir()}/caches/bower/packages",
            "--config.storage.registry=${gradle.getGradleUserHomeDir()}/caches/bower/registry",
            'install']
    inputs.files file('bower.json')
    outputs.files file('bower_components')
    dependsOn npmPackages
}

task bowerSync(type: Sync) {
    from 'bower_components'
    into "src/ratpack/public/assets/"
    exclude '**/*.min.js'
    dependsOn bowerInstall
}

task bowerPackages() {
    dependsOn bowerSync
}

processResources.dependsOn bowerPackages

clean.delete << file('src/ratpack/public/assets/')
clean.delete << file('node_modules')
clean.delete << file('bower_components')

task stage {
    dependsOn installDist
}
